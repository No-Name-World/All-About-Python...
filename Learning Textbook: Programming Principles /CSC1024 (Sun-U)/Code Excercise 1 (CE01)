  ____        __                __     __            _____ _             _   
 |  _ \      / _|               \ \   / /           / ____| |           | |  
 | |_) | ___| |_ ___  _ __ ___   \ \_/ ___  _   _  | (___ | |_ __ _ _ __| |_ 
 |  _ < / _ |  _/ _ \| '__/ _ \   \   / _ \| | | |  \___ \| __/ _` | '__| __|
 | |_) |  __| || (_) | | |  __/    | | (_) | |_| |  ____) | || (_| | |  | |_ 
 |____/ \___|_| \___/|_|  \___|    |_|\___/ \__,_| |_____/ \__\__,_|_|   \__|

In Python, def is a keyword used to define functions. When you define a function in Python, you use the def keyword followed by the function name, parameters (if any), and a colon (:). 
The body of the function is indented and contains the code that defines what the function does.

Here's a simple example (In Python):
____________________________________
def greet(name):
    print("Hello, " + name + "!")

greet("Alice")
In this example:
____________________________________

• def is used to define a function named greet.
• name is the parameter of the function.
• print("Hello, " + name + "!") is the body of the function, which prints a greeting message with the provided name.
• greet("Alice") is a function call, where "Alice" is passed as an argument to the greet function.


 _____ _ _   _         ______     _       _                     _   _____                  _    ______                _   _                 
|_   _(_) | | |     _  | ___ \   (_)     | |                   | | |_   _|                | |   |  ___|              | | (_)                
  | |  _| |_| | ___(_) | |_/ / __ _ _ __ | |_    __ _ _ __   __| |   | | _ __  _ __  _   _| |_  | |_ _   _ _ __   ___| |_ _  ___  _ __  ___ 
  | | | | __| |/ _ \   |  __/ '__| | '_ \| __|  / _` | '_ \ / _` |   | || '_ \| '_ \| | | | __| |  _| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
  | | | | |_| |  __/_  | |  | |  | | | | | |_  | (_| | | | | (_| |  _| || | | | |_) | |_| | |_  | | | |_| | | | | (__| |_| | (_) | | | \__ \
  \_/ |_|\__|_|\___(_) \_|  |_|  |_|_| |_|\__|  \__,_|_| |_|\__,_|  \___/_| |_| .__/ \__,_|\__| \_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/



  .oooooo.                                         .    o8o                               .o  
 d8P'  `Y8b                                      .o8    `"'                             o888  
888      888    oooo  oooo   .ooooo.   .oooo.o .o888oo oooo   .ooooo.  ooo. .oo.         888  
888      888    `888  `888  d88' `88b d88(  "8   888   `888  d88' `88b `888P"Y88b        888  
888      888     888   888  888ooo888 `"Y88b.    888    888  888   888  888   888        888  
`88b    d88b     888   888  888    .o o.  )88b   888 .  888  888   888  888   888        888  
 `Y8bood8P'Ybd'  `V88V"V8P' `Y8bod8P' 8""888P'   "888" o888o `Y8bod8P' o888o o888o      o888o 
                                                           
1. Write a program that prompts the user to enter five test scores and then prints the average of the test scores. 
Answer:
def main():
    scores = []
    for i in range(5):
        score = float(input("Enter test score {}: ".format(i + 1)))
        scores.append(score)
    
    average_score = sum(scores) / len(scores)
    
    print("The average of the test scores is:", average_score)

if __name__ == "__main__":
    main()


Explanation: 
# Define a function called main(), which serves as the entry point of our program.
def main():

# Initialize an empty list called scores to store the test scores entered by the user.
scores = []

# Start a loop that iterates five times. It prompts the user to enter a test score five times.
for i in range(5):
    
    # Prompt the user to enter a test score. Convert it into a floating-point number.
    score = float(input("Enter test score {}: ".format(i + 1)))

    # Add the entered test score to the scores list.
    scores.append(score)

# Calculate the average of the test scores.
# Sum up all the test scores using sum(scores), and find the number of scores using len(scores).
# Divide the sum by the number of scores to get the average score.
average_score = sum(scores) / len(scores)

# Print the average score to the console along with a descriptive message.
print("The average of the test scores is:", average_score)

if __name__ == "__main__":
# Check whether the script is being run directly (not imported as a module).
# If it is, call the main() function to start the program.
# This allows the script to be both importable as a module and executable as a standalone program.

main()
# The main() function serves as the entry point of the program. When the Python script is executed, the Python interpreter starts executing from the top of the script. However, if we import this script as a module into another script, we might not want the code in main() to run automatically.
# By using if __name__ == "__main__":, we ensure that the main() function is only called when the script is executed directly (i.e., it's the main program). If the script is imported as a module into another script, the main() function won't be executed automatically.
# This is a common Python idiom that allows a script to be both imported as a module and executed as a standalone program without causing unintended side effects.





2. Write a program that converts from RM to SGD (Singapore Dollar). On 1st May 2020, where 1 SGD is RM 3.04. Prompt the user to enter an RM amount and print the amount in SGD. 
Answer:
def rm_to_sgd(rm_amount):
    exchange_rate = 3.04
    sgd_amount = rm_amount / exchange_rate
    return sgd_amount

def main():
    try:
        rm_amount = float(input("Enter the amount in Malaysian Ringgit (RM): "))
        sgd_amount = rm_to_sgd(rm_amount)
        print(f"{rm_amount} RM is equal to {sgd_amount:.2f} SGD")
    except ValueError:
        print("Please enter a valid numerical amount.")

if __name__ == "__main__":
    main()


Explanation: 



3. Write a program that prompts the user to enter the length and height of a rectangle, and prints the area and perimeter of the rectangle. 





4. Write a program that accepts an object’s mass (in kilograms) and velocity (in meters per second) as inputs and then outputs its momentum and kinetic energy given the following information 
• The momentum is its mass multiplied by its velocity. 
• The kinetic energy is: (1/2)mv2. 




5. Write a program that prompts the user to input the elapsed time for an event in seconds. The program then outputs the elapsed time in hours, minutes, and seconds. For example, if the elapsed time is 9630 seconds, then the output would be 2:40:30. 





6. Write a program that splits a restaurant bill among a group of friends. The program prompts the user to input the total of the bill and the number of friends splitting the bill. The program first calculates and adds a 10% service charge to the total, and then calculates and adds a 6% GST to the total (including the service charge). The program then outputs the amount to be paid by each friend. 




7. Write a program that prompts the user for his/her yearly income, and outputs the amount of taxes to pay based on the yearly income. The tax table is as follows: 
a. RM 0 to 2,500 – Taxrate: 0% 
b. RM 2,501 to 10,000 – Tax rate: 5% 
c. RM 10,001 to 50,000 – Tax rate: 15% 
d. Exceeding 50,001 – Tax rate: 25% 
For example, if the income is RM 12,000, the total taxes would be RM 1,800 (15%). 


8. Company ABC is introducing a new data plan for smartphones. Each GB (Gigabyte) of data will cost RM 15, up to 10 GB. Any data over 10 GB will be charged at RM 30 per GB. Write a program that prompts the user to enter their monthly data usage (in GB), and prints the data charges for the month. 
